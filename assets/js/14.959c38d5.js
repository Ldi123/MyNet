(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{537:function(s,t,a){"use strict";a.r(t);var n=a(9),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h4",{attrs:{id:"mysql筛选非空数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql筛选非空数据"}},[s._v("#")]),s._v(" MySQL筛选非空数据")]),s._v(" "),t("p",[s._v("在mysql中，筛选非空的时候经常会用到"),t("code",[s._v("is not null")]),s._v("和"),t("code",[s._v("!=null")]),s._v("，这两种方法单从字面上来看感觉是差不多的，其实如果去运行一下试试的话差别会很大！")]),s._v(" "),t("p",[s._v("null 表示什么也不是， 不能用=、>、< … 所有的判断，结果都是null，所以只能用 is null进行判断。\n默认情况下，推荐使用 IS NOT NULL去判断，因为SQL默认情况下对！= Null的判断会永远返回0行数据，但没有语法错误")]),s._v(" "),t("p",[s._v("如果你一定想要使用！= Null来判断，需要加上这个语句：set ANSI_NULLS off")]),s._v(" "),t("h4",{attrs:{id:"mysql-将一张表的数据更新到另外一张表中"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql-将一张表的数据更新到另外一张表中"}},[s._v("#")]),s._v(" mysql 将一张表的数据更新到另外一张表中")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v("\n\tP p\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v("\n\tp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\n\t\tu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xx\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("\n\t\tU u\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("\n\t\tp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xxxx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" u"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xxxx\n\t\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ccc "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ccc'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("\n\tp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("aa "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'aa'")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("bb "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\n\tp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ddd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("h4",{attrs:{id:"mysql输入密码后时出现闪退的解决办法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql输入密码后时出现闪退的解决办法"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"https://blog.csdn.net/weixin_39956356/article/details/114823665?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0.queryctrv2&spm=1001.2101.3001.4242.1&utm_relevant_index=1",target:"_blank",rel:"noopener noreferrer"}},[s._v("MySQL输入密码后时出现闪退的解决办法"),t("OutboundLink")],1)]),s._v(" "),t("h4",{attrs:{id:"mysql执行查询过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql执行查询过程"}},[s._v("#")]),s._v(" MySQL执行查询过程")]),s._v(" "),t("ol",[t("li",[s._v("客户端向MySQL服务器发送一条查询请求")]),s._v(" "),t("li",[s._v("服务器首先检查查询缓存，如果命中缓存，则立刻返回存储在缓存中的结果。否则进入下一阶段")]),s._v(" "),t("li",[s._v("服务器进行SQL解析、预处理、再由优化器生成对应的执行计划")]),s._v(" "),t("li",[s._v("MySQL根据执行计划，调用存储引擎的API来执行查询")]),s._v(" "),t("li",[s._v("将结果返回给客户端，同时缓存查询结果")])]),s._v(" "),t("h4",{attrs:{id:"数据库的四种转储方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库的四种转储方法"}},[s._v("#")]),s._v(" 数据库的四种转储方法")]),s._v(" "),t("p",[s._v("①静态转储：转储期间不能对数据库进行任何存取等活动，是最直接的转储方法，必须等待转储完毕后才能对数据库进行存取修改等操作；静态转储效率会比较低，转储期间，新的事务无法进行")]),s._v(" "),t("p",[s._v("②动态转储：转储期间允许对数据进行存取或者修改；动态转储相比静态转储的好处是转储期间，不会影响新事务的运行，效率有所提高；但转储结束后的数据并不能保证即时生效，如果转储期间，事务对数据进行了修改的话，转储后的数据就不能与原数据库中的数据保持一致性，因此要把转储期间事务对数据库进行的修改活动等记录下来成为日志文件，再合并上转储后的数据，才能与原数据库保持数据一致性")]),s._v(" "),t("p",[s._v("③海量转储：每次都转储整个数据库；相比于动态转储的好处是，不用担心数据一致性的问题，在转储后不必进行记录日志文件等操作，对于恢复数据库会相对简单；但若数据库很大，那么每次转储耗费时间就会很长，也浪费存储空间")]),s._v(" "),t("p",[s._v("④增量转储：每次只转储上次备份后变化的数据；相对于海量转储，提高了转储效率，只对更新的数据进行转储，实际上也是减少了数据冗余，是比较实用高效的转储方法")])])}),[],!1,null,null,null);t.default=r.exports}}]);